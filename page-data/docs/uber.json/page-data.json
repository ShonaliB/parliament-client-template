{"componentChunkName":"component---src-templates-openapi-template-js","path":"/docs/uber.json","result":{"data":{"parliamentNavigation":{"pages":[{"title":"Overview","path":"DevRel/analytics-2.0-apis/master/README.md","pages":[]},{"title":"Include Inline","path":"DevRel/analytics-2.0-apis/master/wrap-support.md","pages":[]},{"title":"SDS","path":"","pages":[{"title":"JSON File","path":"DevRel/analytics-2.0-apis/master/SDS/swagger.json","pages":[]},{"title":"Markdown File","path":"DevRel/analytics-2.0-apis/master/SDS/swagger.md","pages":[]}]},{"title":"API References","path":"","pages":[{"title":"Analytics APIs","path":"DevRel/analytics-2.0-apis/master/docs/swagger.json","pages":[]},{"title":"Petstore APIs","path":"DevRel/analytics-2.0-apis/master/docs/petstore.yaml","pages":[]}]},{"title":"Getting Started","path":"DevRel/analytics-2.0-apis/master/create-oauth-client.md","pages":[{"title":"Creating an OAuth Client","path":"DevRel/analytics-2.0-apis/master/create-oauth-client.md","pages":[]},{"title":"OAuth using cURL","path":"DevRel/analytics-2.0-apis/master/oauth-curl.md","pages":[]},{"title":"OAuth using POSTMAN","path":"DevRel/analytics-2.0-apis/master/oauth-postman.md","pages":[]},{"title":"JWT Authentication","path":"DevRel/analytics-2.0-apis/master/jwt.md","pages":[]}]},{"title":"Reporting API Guide","path":"DevRel/analytics-2.0-apis/master/reporting-guide.md","pages":[{"title":"Reporting with Multiple Breakdowns","path":"DevRel/analytics-2.0-apis/master/reporting-multiple-breakdowns.md","pages":[]},{"title":"Reporting Tips and Tricks","path":"DevRel/analytics-2.0-apis/master/reporting-tricks.md","pages":[]}]},{"title":"Migrating Guide","path":"DevRel/analytics-2.0-apis/master/migration-guide.md","pages":[]},{"title":"Calculated Metrics","path":"DevRel/analytics-2.0-apis/master/calculatedmetrics.md","pages":[]},{"title":"Segments APIs","path":"DevRel/analytics-2.0-apis/master/segments-guide.md","pages":[{"title":"Segment Definition Data Structure","path":"DevRel/analytics-2.0-apis/master/segments.md","pages":[]}]},{"title":"FAQ","path":"DevRel/analytics-2.0-apis/master/faq.md","pages":[]},{"title":"Support","path":"DevRel/analytics-2.0-apis/master/support.md","pages":[]},{"title":"YouTube","path":"DevRel/analytics-2.0-apis/master/youtube.md","pages":[]}]}},"pageContext":{"spec":{"swagger":"2.0","info":{"title":"Uber API","description":"Move your app forward with the Uber API","version":"1.0.0"},"host":"api.uber.com","schemes":["https"],"basePath":"/v1","produces":["application/json"],"paths":{"/products":{"get":{"summary":"Product Types","description":"The Products endpoint returns information about the Uber products offered at a given location. The response includes the display name and other details about each product, and lists the products in the proper display order.","parameters":[{"name":"latitude","in":"query","description":"Latitude component of location.","required":true,"type":"number","format":"double"},{"name":"longitude","in":"query","description":"Longitude component of location.","required":true,"type":"number","format":"double"}],"tags":["Products"],"responses":{"200":{"description":"An array of products","schema":{"type":"array","items":{"$ref":"#/definitions/Product"}}},"default":{"description":"Unexpected error","schema":{"$ref":"#/definitions/Error"}}},"x-code-samples":[{"lang":"shell","source":"curl --request GET \\\n  --url 'https://api.uber.com/v1/products?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE'"},{"lang":"node","source":"var request = require(\"request\");\n\nvar options = {\n  method: 'GET',\n  url: 'https://api.uber.com/v1/products',\n  qs: {latitude: 'SOME_NUMBER_VALUE', longitude: 'SOME_NUMBER_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"php","source":"<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.uber.com/v1/products');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'latitude' => 'SOME_NUMBER_VALUE',\n  'longitude' => 'SOME_NUMBER_VALUE'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"},{"lang":"java","source":"HttpResponse<String> response = Unirest.get(\"https://api.uber.com/v1/products?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\")\n  .asString();"},{"lang":"go","source":"package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.uber.com/v1/products?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"},{"lang":"python","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.uber.com\")\n\nconn.request(\"GET\", \"/v1/products?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"csharp","source":"var client = new RestClient(\"https://api.uber.com/v1/products?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\");\nvar request = new RestRequest(Method.GET);\nIRestResponse response = client.Execute(request);"},{"lang":"ruby","source":"require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.uber.com/v1/products?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body"}]}},"/estimates/price":{"get":{"summary":"Price Estimates","description":"The Price Estimates endpoint returns an estimated price range for each product offered at a given location. The price estimate is provided as a formatted string with the full price range and the localized currency symbol.<br><br>The response also includes low and high estimates, and the [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code for situations requiring currency conversion. When surge is active for a particular product, its surge_multiplier will be greater than 1, but the price estimate already factors in this multiplier.","parameters":[{"name":"start_latitude","in":"query","description":"Latitude component of start location.","required":true,"type":"number","format":"double"},{"name":"start_longitude","in":"query","description":"Longitude component of start location.","required":true,"type":"number","format":"double"},{"name":"end_latitude","in":"query","description":"Latitude component of end location.","required":true,"type":"number","format":"double"},{"name":"end_longitude","in":"query","description":"Longitude component of end location.","required":true,"type":"number","format":"double"}],"tags":["Estimates"],"responses":{"200":{"description":"An array of price estimates by product","schema":{"type":"array","items":{"$ref":"#/definitions/PriceEstimate"}}},"default":{"description":"Unexpected error","schema":{"$ref":"#/definitions/Error"}}},"x-code-samples":[{"lang":"shell","source":"curl --request GET \\\n  --url 'https://api.uber.com/v1/estimates/price?start_latitude=SOME_NUMBER_VALUE&start_longitude=SOME_NUMBER_VALUE&end_latitude=SOME_NUMBER_VALUE&end_longitude=SOME_NUMBER_VALUE'"},{"lang":"node","source":"var request = require(\"request\");\n\nvar options = {\n  method: 'GET',\n  url: 'https://api.uber.com/v1/estimates/price',\n  qs: {\n    start_latitude: 'SOME_NUMBER_VALUE',\n    start_longitude: 'SOME_NUMBER_VALUE',\n    end_latitude: 'SOME_NUMBER_VALUE',\n    end_longitude: 'SOME_NUMBER_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"php","source":"<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.uber.com/v1/estimates/price');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'start_latitude' => 'SOME_NUMBER_VALUE',\n  'start_longitude' => 'SOME_NUMBER_VALUE',\n  'end_latitude' => 'SOME_NUMBER_VALUE',\n  'end_longitude' => 'SOME_NUMBER_VALUE'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"},{"lang":"java","source":"HttpResponse<String> response = Unirest.get(\"https://api.uber.com/v1/estimates/price?start_latitude=SOME_NUMBER_VALUE&start_longitude=SOME_NUMBER_VALUE&end_latitude=SOME_NUMBER_VALUE&end_longitude=SOME_NUMBER_VALUE\")\n  .asString();"},{"lang":"go","source":"package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.uber.com/v1/estimates/price?start_latitude=SOME_NUMBER_VALUE&start_longitude=SOME_NUMBER_VALUE&end_latitude=SOME_NUMBER_VALUE&end_longitude=SOME_NUMBER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"},{"lang":"python","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.uber.com\")\n\nconn.request(\"GET\", \"/v1/estimates/price?start_latitude=SOME_NUMBER_VALUE&start_longitude=SOME_NUMBER_VALUE&end_latitude=SOME_NUMBER_VALUE&end_longitude=SOME_NUMBER_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"csharp","source":"var client = new RestClient(\"https://api.uber.com/v1/estimates/price?start_latitude=SOME_NUMBER_VALUE&start_longitude=SOME_NUMBER_VALUE&end_latitude=SOME_NUMBER_VALUE&end_longitude=SOME_NUMBER_VALUE\");\nvar request = new RestRequest(Method.GET);\nIRestResponse response = client.Execute(request);"},{"lang":"ruby","source":"require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.uber.com/v1/estimates/price?start_latitude=SOME_NUMBER_VALUE&start_longitude=SOME_NUMBER_VALUE&end_latitude=SOME_NUMBER_VALUE&end_longitude=SOME_NUMBER_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body"}]}},"/estimates/time":{"get":{"summary":"Time Estimates","description":"The Time Estimates endpoint returns ETAs for all products offered at a given location, with the responses expressed as integers in seconds. We recommend that this endpoint be called every minute to provide the most accurate, up-to-date ETAs.","parameters":[{"name":"start_latitude","in":"query","description":"Latitude component of start location.","required":true,"type":"number","format":"double"},{"name":"start_longitude","in":"query","description":"Longitude component of start location.","required":true,"type":"number","format":"double"},{"name":"customer_uuid","in":"query","type":"string","format":"uuid","description":"Unique customer identifier to be used for experience customization."},{"name":"product_id","in":"query","type":"string","description":"Unique identifier representing a specific product for a given latitude & longitude."}],"tags":["Estimates"],"responses":{"200":{"description":"An array of products","schema":{"type":"array","items":{"$ref":"#/definitions/Product"}}},"default":{"description":"Unexpected error","schema":{"$ref":"#/definitions/Error"}}},"x-code-samples":[{"lang":"shell","source":"curl --request GET \\\n  --url 'https://api.uber.com/v1/estimates/time?start_latitude=SOME_NUMBER_VALUE&start_longitude=SOME_NUMBER_VALUE&customer_uuid=SOME_STRING_VALUE&product_id=SOME_STRING_VALUE'"},{"lang":"node","source":"var request = require(\"request\");\n\nvar options = {\n  method: 'GET',\n  url: 'https://api.uber.com/v1/estimates/time',\n  qs: {\n    start_latitude: 'SOME_NUMBER_VALUE',\n    start_longitude: 'SOME_NUMBER_VALUE',\n    customer_uuid: 'SOME_STRING_VALUE',\n    product_id: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"php","source":"<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.uber.com/v1/estimates/time');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'start_latitude' => 'SOME_NUMBER_VALUE',\n  'start_longitude' => 'SOME_NUMBER_VALUE',\n  'customer_uuid' => 'SOME_STRING_VALUE',\n  'product_id' => 'SOME_STRING_VALUE'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"},{"lang":"java","source":"HttpResponse<String> response = Unirest.get(\"https://api.uber.com/v1/estimates/time?start_latitude=SOME_NUMBER_VALUE&start_longitude=SOME_NUMBER_VALUE&customer_uuid=SOME_STRING_VALUE&product_id=SOME_STRING_VALUE\")\n  .asString();"},{"lang":"go","source":"package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.uber.com/v1/estimates/time?start_latitude=SOME_NUMBER_VALUE&start_longitude=SOME_NUMBER_VALUE&customer_uuid=SOME_STRING_VALUE&product_id=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"},{"lang":"python","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.uber.com\")\n\nconn.request(\"GET\", \"/v1/estimates/time?start_latitude=SOME_NUMBER_VALUE&start_longitude=SOME_NUMBER_VALUE&customer_uuid=SOME_STRING_VALUE&product_id=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"csharp","source":"var client = new RestClient(\"https://api.uber.com/v1/estimates/time?start_latitude=SOME_NUMBER_VALUE&start_longitude=SOME_NUMBER_VALUE&customer_uuid=SOME_STRING_VALUE&product_id=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nIRestResponse response = client.Execute(request);"},{"lang":"ruby","source":"require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.uber.com/v1/estimates/time?start_latitude=SOME_NUMBER_VALUE&start_longitude=SOME_NUMBER_VALUE&customer_uuid=SOME_STRING_VALUE&product_id=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body"}]}},"/me":{"get":{"summary":"User Profile","description":"The User Profile endpoint returns information about the Uber user that has authorized with the application.","tags":["User"],"responses":{"200":{"description":"Profile information for a user","schema":{"$ref":"#/definitions/Profile"}},"default":{"description":"Unexpected error","schema":{"$ref":"#/definitions/Error"}}},"x-code-samples":[{"lang":"shell","source":"curl --request GET \\\n  --url https://api.uber.com/v1/me"},{"lang":"node","source":"var request = require(\"request\");\n\nvar options = {method: 'GET', url: 'https://api.uber.com/v1/me'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"php","source":"<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.uber.com/v1/me');\n$request->setMethod(HTTP_METH_GET);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"},{"lang":"java","source":"HttpResponse<String> response = Unirest.get(\"https://api.uber.com/v1/me\")\n  .asString();"},{"lang":"go","source":"package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.uber.com/v1/me\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"},{"lang":"python","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.uber.com\")\n\nconn.request(\"GET\", \"/v1/me\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"csharp","source":"var client = new RestClient(\"https://api.uber.com/v1/me\");\nvar request = new RestRequest(Method.GET);\nIRestResponse response = client.Execute(request);"},{"lang":"ruby","source":"require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.uber.com/v1/me\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body"}]}},"/history":{"get":{"summary":"User Activity","description":"The User Activity endpoint returns data about a user's lifetime activity with Uber. The response will include pickup locations and times, dropoff locations and times, the distance of past requests, and information about which products were requested.<br><br>The history array in the response will have a maximum length based on the limit parameter. The response value count may exceed limit, therefore subsequent API requests may be necessary.","parameters":[{"name":"offset","in":"query","type":"integer","format":"int32","description":"Offset the list of returned results by this amount. Default is zero."},{"name":"limit","in":"query","type":"integer","format":"int32","description":"Number of items to retrieve. Default is 5, maximum is 100."}],"tags":["User"],"responses":{"200":{"description":"History information for the given user","schema":{"$ref":"#/definitions/Activities"}},"default":{"description":"Unexpected error","schema":{"$ref":"#/definitions/Error"}}},"x-code-samples":[{"lang":"shell","source":"curl --request GET \\\n  --url 'https://api.uber.com/v1/history?offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE'"},{"lang":"node","source":"var request = require(\"request\");\n\nvar options = {\n  method: 'GET',\n  url: 'https://api.uber.com/v1/history',\n  qs: {offset: 'SOME_INTEGER_VALUE', limit: 'SOME_INTEGER_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"php","source":"<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.uber.com/v1/history');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'offset' => 'SOME_INTEGER_VALUE',\n  'limit' => 'SOME_INTEGER_VALUE'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"},{"lang":"java","source":"HttpResponse<String> response = Unirest.get(\"https://api.uber.com/v1/history?offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE\")\n  .asString();"},{"lang":"go","source":"package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.uber.com/v1/history?offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"},{"lang":"python","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.uber.com\")\n\nconn.request(\"GET\", \"/v1/history?offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"csharp","source":"var client = new RestClient(\"https://api.uber.com/v1/history?offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE\");\nvar request = new RestRequest(Method.GET);\nIRestResponse response = client.Execute(request);"},{"lang":"ruby","source":"require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.uber.com/v1/history?offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body"}]}}},"definitions":{"Product":{"properties":{"product_id":{"type":"string","description":"Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles."},"description":{"type":"string","description":"Description of product."},"display_name":{"type":"string","description":"Display name of product."},"capacity":{"type":"string","description":"Capacity of product. For example, 4 people."},"image":{"type":"string","description":"Image URL representing the product."}}},"PriceEstimate":{"properties":{"product_id":{"type":"string","description":"Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles"},"currency_code":{"type":"string","description":"[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code."},"display_name":{"type":"string","description":"Display name of product."},"estimate":{"type":"string","description":"Formatted string of estimate in local currency of the start location. Estimate could be a range, a single number (flat rate) or \"Metered\" for TAXI."},"low_estimate":{"type":"number","description":"Lower bound of the estimated price."},"high_estimate":{"type":"number","description":"Upper bound of the estimated price."},"surge_multiplier":{"type":"number","description":"Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price estimate already factors in the surge multiplier."}}},"Profile":{"properties":{"first_name":{"type":"string","description":"First name of the Uber user."},"last_name":{"type":"string","description":"Last name of the Uber user."},"email":{"type":"string","description":"Email address of the Uber user"},"picture":{"type":"string","description":"Image URL of the Uber user."},"promo_code":{"type":"string","description":"Promo code of the Uber user."}}},"Activity":{"properties":{"uuid":{"type":"string","description":"Unique identifier for the activity"}}},"Activities":{"properties":{"offset":{"type":"integer","format":"int32","description":"Position in pagination."},"limit":{"type":"integer","format":"int32","description":"Number of items to retrieve (100 max)."},"count":{"type":"integer","format":"int32","description":"Total number of items available."},"history":{"type":"array","items":{"$ref":"#/definitions/Activity"}}}},"Error":{"properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"fields":{"type":"string"}}}}},"seo":null,"gitRemote":{"protocol":"https","resource":"git.corp.adobe.com","full_name":"devrel/analytics-2.0-apis","organization":"devrel","name":"analytics-2.0-apis","ref":"master"}}},"staticQueryHashes":["63159454"]}